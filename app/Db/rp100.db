record(bo, "$(BASE):RP100_RESET") {
    field(DESC, "instrument resetting")
    field(DTYP, "stream")
    field(ZNAM, "")
    field(ONAM, "Reset")
    field(OUT,  "@rp100.proto RESET() $(DEV)")
}

record(bo, "$(BASE):RP100_CLEAR") {
    field(DESC, "Clears all status/errors")
    field(DTYP, "stream")
    field(ZNAM, "")
    field(ONAM, "Cleared")
    field(OUT,  "@rp100.proto CLEAR() $(DEV)")
}

record (longin, "$(BASE):RP100_SYSTEM_ERROR_CNT")
{
    field (DESC, "errors in the device queue")
    field (DTYP, "stream")
    field (INP,  "@rp100.proto GET_SYSTEM_ERROR_CNT() $(DEV)")
    field(SCAN, "1 second")
}

# Poll error queue and update local error string
# once, operator needs to acknowledge error and 
# explicitely clear the status.
record(calcout, "$(BASE):PROC_ERROR") {
    field(DESC, "disable measurement")
    field(INPA, "$(BASE):RP100_SYSTEM_ERROR_CNT CP")
    field(CALC, "A#0")
    field(OOPT, "Transition To Non-zero")
    field(OUT,  "$(BASE):RP100_SYSTEM_ERROR.PROC")
}

record(stringin, "$(BASE):RP100_SYSTEM_ERROR")
{
    field(DESC, "error code and description")
    field(SCAN, "Passive")
    field(DTYP, "stream")
    field(INP,  "@rp100.proto GET_SYSTEM_ERROR() $(DEV)")
}

record(stringin, "$(BASE):RP100_IDN") {
    field(DESC, "Full device identification")
    field(DTYP, "stream")
    field(INP,  "@rp100.proto GET_IDN() $(DEV)")
}

record(seq, "$(BASE):INIT")
{
   field(DESC, "Init RP100")
   field(SCAN, "Passive")
   field(DO1, "1")
   field(DO2, "1")
   field(DO3, "1")
   field(DO3, "1")
   field(LNK1, "$(BASE):RP100_CLEAR.PROC")
   field(DLY2, "0.2") # Give time for RP100 to reset
   field(LNK2, "$(BASE):RP100_RESET.PROC")
   field(DLY3, "0.2") # Give time for RP100 to clear
   field(LNK3, "$(BASE):RP100_IDN.PROC")
   field(PINI, "YES")
}

## channels properties
record(bo, "$(BASE):SOUR1_EN") {
    field(DESC, "Enable/Disable HV channel")
    field(DTYP, "stream")
    field(ZNAM, "Disabled")
    field(ONAM, "Enabled")
    field(FLNK, "$(BASE):SOUR1_EN_RBV")
    field(OUT,  "@rp100.proto SET_OUTP(1) $(DEV)")
}

record(bi, "$(BASE):SOUR1_EN_RBV") {
    field(DESC, "Enable/Disable HV channel")
    field(DTYP, "stream")
    field(ZNAM, "Disabled")
    field(ONAM, "Enabled")
    field(INP,  "@rp100.proto GET_OUTP(1) $(DEV)")
}

# 0.5 mM/s minimum smooth ramp.
record(ao, "$(BASE):SOUR1_SLEW_RATE") {
    field(DESC, "Set voltage slew rate")
    field(DTYP, "stream")
    field(OUT,  "@rp100.proto SET_VOLT_SLEW(1) $(DEV)")
    field(HOPR, "100")
    field(LOPR, "0.0005")
    field(EGU,  "V/s")
    field(PREC, "4")
    field(FLNK, "$(BASE):SOUR1_SLEW_RATE_RBV")
}

record(ai, "$(BASE):SOUR1_SLEW_RATE_RBV") {
    field(DESC, "Set voltage slew rate")
    field(DTYP, "stream")
    field(INP,  "@rp100.proto GET_VOLT_SLEW(1) $(DEV)")
    field(EGU,  "V/s")
    field(PREC, "4")
}

record(ao, "$(BASE):SOUR1_TARGET_VOLT") {
    field(DESC, "change out voltage")
    field(DTYP, "stream")
    field(OUT,  "@rp100.proto SET_VOLT(1) $(DEV)")
    field(HOPR, "200")
    field(LOPR, "-200")
    field(EGU,  "V")
    field(PREC, "4")
    field(FLNK, "$(BASE):SOUR1_TARGET_PROC")
}

record(seq, "$(BASE):SOUR1_TARGET_PROC")
{
   field(DESC, "Get source 1 target readbacks")
   field(SCAN, "Passive")
   field(DO1, "1")
   field(DO2, "1")
   field(LNK1, "$(BASE):SOUR1_TARGET_VOLT_RBV.PROC")
#   field(DLY2, "0.2") 
   field(LNK2, "$(BASE):SOUR1_OUT_VOLT.PROC")
}

record(ai, "$(BASE):SOUR1_TARGET_VOLT_RBV") {
    field(DESC, "Measure output voltage")
    field(DTYP, "stream")
    field(INP,  "@rp100.proto GET_VOLT(1) $(DEV)")
    field(EGU,  "V")
    field(PREC, "4")
}

record(ai, "$(BASE):SOUR1_OUT_VOLT") {
    field(DESC, "Measure output voltage")
    field(DTYP, "stream")
    field(INP,  "@rp100.proto GET_VOLT_NOW(1) $(DEV)")
    field(EGU,  "V")
    field(PREC, "4")
}

record(ai, "$(BASE):SOUR1_MEAS_VOLT") {
    field(DESC, "Measure output voltage")
    field(DTYP, "stream")
    field(INP,  "@rp100.proto MEAS_VOLT(1) $(DEV)")
    field(SCAN, ".5 second")
    field(EGU,  "V")
    field(PREC, "4")
}

record(ai, "$(BASE):SOUR1_MEAS_CURR") {
    field(DESC, "Measure output current")
    field(DTYP, "stream")
    field(INP,  "@rp100.proto MEAS_CURR(1) $(DEV)")
    field(SCAN, ".5 second")	
    field(HOPR, "0.007")
    field(LOPR, "-0.007")
    field(EGU,  "A")
    field(PREC, "4")
}

## channel 2
record(bo, "$(BASE):SOUR2_EN") {
    field(DESC, "Enable/Disable HV channel")
    field(DTYP, "stream")
    field(ZNAM, "Disabled")
    field(ONAM, "Enabled")
    field(FLNK, "$(BASE):SOUR2_EN_RBV")
    field(OUT,  "@rp100.proto SET_OUTP(2) $(DEV)")
}

record(bi, "$(BASE):SOUR2_EN_RBV") {
    field(DESC, "Enable/Disable HV channel")
    field(DTYP, "stream")
    field(ZNAM, "Disabled")
    field(ONAM, "Enabled")
    field(INP,  "@rp100.proto GET_OUTP(2) $(DEV)")
}

# 0.5 mM/s minimum smooth ramp.
record(ao, "$(BASE):SOUR2_SLEW_RATE") {
    field(DESC, "Set voltage slew rate")
    field(DTYP, "stream")
    field(OUT,  "@rp100.proto SET_VOLT_SLEW(2) $(DEV)")
    field(HOPR, "100")
    field(LOPR, "0.0005")
    field(EGU,  "V/s")
    field(PREC, "4")
    field(FLNK, "$(BASE):SOUR2_SLEW_RATE_RBV")
}

record(ai, "$(BASE):SOUR2_SLEW_RATE_RBV") {
    field(DESC, "Set voltage slew rate")
    field(DTYP, "stream")
    field(INP,  "@rp100.proto GET_VOLT_SLEW(2) $(DEV)")
    field(EGU,  "V/s")
    field(PREC, "4")
}


record(ao, "$(BASE):SOUR2_TARGET_VOLT") {
    field(DESC, "change out voltage")
    field(DTYP, "stream")
    field(OUT,  "@rp100.proto SET_VOLT(2) $(DEV)")
    field(HOPR, "200")
    field(LOPR, "-200")
    field(EGU,  "V")
    field(PREC, "4")
    field(FLNK, "$(BASE):SOUR2_TARGET_PROC")
}

record(seq, "$(BASE):SOUR2_TARGET_PROC")
{
   field(DESC, "Get source 2 target readbacks")
   field(SCAN, "Passive")
   field(DO1, "1")
   field(DO2, "1")
   field(LNK1, "$(BASE):SOUR2_TARGET_VOLT_RBV.PROC")
#   field(DLY2, "0.2")
   field(LNK2, "$(BASE):SOUR2_OUT_VOLT.PROC")
}

record(ai, "$(BASE):SOUR2_TARGET_VOLT_RBV") {
    field(DESC, "Measure output voltage")
    field(DTYP, "stream")
    field(INP,  "@rp100.proto GET_VOLT(2) $(DEV)")
    field(EGU,  "V")
    field(PREC, "4")
}

record(ai, "$(BASE):SOUR2_OUT_VOLT") {
    field(DESC, "Measure output voltage")
    field(DTYP, "stream")
    field(INP,  "@rp100.proto GET_VOLT_NOW(2) $(DEV)")
    field(EGU,  "V")
    field(PREC, "4")
}

record(ai, "$(BASE):SOUR2_MEAS_VOLT") {
    field(DESC, "Measure output voltage")
    field(DTYP, "stream")
    field(INP,  "@rp100.proto MEAS_VOLT(2) $(DEV)")
    field(SCAN, ".5 second")
    field(HOPR, "200")
    field(LOPR, "-200")
    field(EGU,  "V")
    field(PREC, "4")
}

record(ai, "$(BASE):SOUR2_MEAS_CURR") {
    field(DESC, "Measure output current")
    field(DTYP, "stream")
    field(INP,  "@rp100.proto MEAS_CURR(2) $(DEV)")
    field(SCAN, ".5 second")	
    field(HOPR, "0.007")
    field(LOPR, "-0.007")
    field(EGU,  "A")
    field(PREC, "4")
}

